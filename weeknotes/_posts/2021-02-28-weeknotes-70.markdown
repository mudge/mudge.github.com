---
title: Weeknotes 70
excerpt: Fixing Joy-Con drift, a surprise encounter with my favourite type of duck, parsing Data URLs and reverting Active Record migrations.
date: 2021-02-28 14:37:00
---
*   After having [a drifting left Joy-Con for over a year](/2020/01/26/weeknotes-13/), I finally sent [it to Nintendo for repair](https://www.nintendo.co.uk/Support/Nintendo-Switch/Troubleshooting/Joy-Con-Control-Sticks-Are-Not-Responding-or-Respond-Incorrectly-1908347.html).

    With the Switch out of action, I signed up for a free trial of [Apple Arcade](https://www.apple.com/uk/apple-arcade/) and have so far downloaded "[What the Golf?](https://whatthegolf.com), "[A Monster's Expedition (Through Puzzling Exhibitions)](https://www.monsterexpedition.com)" and "[Sayonara Wild Hearts](https://simogo.com/work/sayonara-wild-hearts/)".

    I've only played "What the Golf?" so far and it is wonderful.

*   My mum and I took C to a nearby park to feed the ducks ([oats, to avoid controversy](https://www.theguardian.com/world/2019/oct/18/feed-the-ducks-bread-sign-sparks-heated-online-debate)) and saw a raft of glorious [Mandarin ducks](https://en.wikipedia.org/wiki/Mandarin_duck).

    <p class="center"><img src="/i/mandarin-duck.jpg" width="375" height="375" alt></p>

*   I had to parse a CSV file sent as a [Data URL](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs) this week and converting a [Request for Comments](https://tools.ietf.org/html/rfc2397) into a regular expression is a great joy in life:

    ```ruby
    REGEXP = %r{
      data:
      (?<mediatype>
        (?<mimetype> .+? / .+? )?
        (?<parameters> ( ; .+? = .+? )* )
      )?
      (?<extension>;base64)?
      ,
      (?<data>.*)
    }x.freeze
    ```

    You can find a [full Ruby implementation on GitHub](https://gist.github.com/mudge/1f958ec848b6c31e287baa7a60a88064).

*   I learnt about [Active Record's ability to rollback migrations using the `revert` method](https://guides.rubyonrails.org/active_record_migrations.html#reverting-previous-migrations) which came in very handy when amending a unique index:

    ```ruby
    require_relative '20210211104247_add_unique_index_to_product_links'

    class ChangeUniqueIndexOnProductLinks < ActiveRecord::Migration[6.1]
      def change
        revert AddUniqueIndexToProductLinks

        add_index(:product_links, [:product_id, :reseller_id, :country_id], unique: true, name: 'by_product_reseller_country')
      end
    end
    ```
